#!/bin/sh

CURR_OS=$(uname -s)
echo "Please enter your password to pre-authorize sudo:"
sudo -v

# install brew if it is on mac and not installed
case "$CURR_OS" in
    Darwin*)
        if test ! "$(which brew)"; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

            BASE_HOMEBREW_FOLDER=/usr/local
            if [ "$(arch)" = "arm64" ]; then
                BASE_HOMEBREW_FOLDER=/opt/homebrew
            fi
            eval "$(${BASE_HOMEBREW_FOLDER}/bin/brew shellenv)"
        fi
        ;;
esac

# install necessary packages
echo "Installing necessary packages..."
case "$CURR_OS" in
    Darwin*)
        brew install \
			coreutils \
			gnu-sed \
			starship \
			zsh-syntax-highlighting \
			libgit2 \
			neovim \
			fzf \
			fd \
			rg \
			delta \
			chafa \
			bat \
			atuin
        ;;
    Linux*)
        # if fedora, install from dnf
        if command -v dnf >/dev/null 2>&1; then
			sudo dnf update -y
			sudo dnf install 'dnf-command(copr)' -y
            sudo dnf copr enable atim/starship -y
            sudo dnf install -y curl git starship neovim libgit2 bat fzf fd rg delta chafa
			curl --proto '=https' --tlsv1.2 -LsSf https://github.com/atuinsh/atuin/releases/latest/download/atuin-installer.sh | sh
        # if ubuntu/debian, install from apt
        elif command -v apt >/dev/null 2>&1; then
            sudo apt install -y neovim
            curl -fsSL https://starship.rs/install.sh | sh -s -- -y
        fi
        ;;
esac

SED=$(which sed)
case "$CURR_OS" in
    Darwin*)
        SED=$(which gsed)
    ;;
esac

git clone "git@code.wedotstud.io:patrick/dotfiles.git" "$HOME/.dotfiles" || {
    # If SSH clone fails, try HTTPS
    echo "SSH clone failed, trying with HTTPS..."
    git clone "https://code.wedotstud.io/patrick/dotfiles.git" "$HOME/.dotfiles"
}

SOURCE_DOTFILES_RC=". $HOME/.dotfiles/.dotfiles.rc"
BASHRC_PATH="$HOME/.bashrc"
ZSHRC_PATH="$HOME/.zshrc"

insert_source() {
    rc_file=$1
    if ! grep -q "$SOURCE_DOTFILES_RC" "$rc_file"; then
        if grep -q "# Fig post block" "$rc_file"; then
            $SED -i "/# Fig post block/i $SOURCE_DOTFILES_RC" "$rc_file"
        elif grep -q "# CodeWhisperer post block" "$rc_file"; then
            $SED -i "/# CodeWhisperer post block/i $SOURCE_DOTFILES_RC" "$rc_file"
        elif grep -q "# Q post block" "$rc_file"; then
            $SED -i "/# Q post block/i $SOURCE_DOTFILES_RC" "$rc_file"
        else
            echo "$SOURCE_DOTFILES_RC" >> "$rc_file"
        fi
    fi
}

insert_source "$BASHRC_PATH"
insert_source "$ZSHRC_PATH"

# install starship config
# if starship config already exists and not symlinked, back it up
if test -f "$HOME/.config/starship.toml" && ! test -L "$HOME/.config/starship.toml"; then
    echo "Backing up existing starship configuration..."
    mv "$HOME/.config/starship.toml" "$HOME/.config/starship.toml.bak"
fi
echo "Installing starship configuration..."
mkdir -p "$HOME/.config"
ln -s "$HOME/.dotfiles/starship.toml" "$HOME/.config/starship.toml"

if test -f "$HOME/.wezterm.lua"; then
	echo "::Backing up Wezterm configuration..."
	mv "$HOME/.wezterm.lua" "$HOME/.wezterm.lua.bak"
fi
echo "::Installing Wezterm Configuration..."
ln -s "$HOME/.dotfiles/.wezterm.lua" "$HOME/.wezterm.lua" 


if test -d "$HOME/.config/nvim" && test ! -L "$HOME/.config/nvim"; then
    echo "::Backing up existing nvim configuration..."
    mv "$HOME/.config/nvim" "$HOME/.config/nvim.bak"
fi

echo "::Installing nvim configuration..."
ln -sfn "$HOME/.dotfiles/neovim" "$HOME/.config/nvim" && \
nvim --headless "+Lazy! sync" +qa

sleep 10
echo "Done! Please restart your shell."
