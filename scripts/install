#!/bin/sh

SOURCE_DOTFILES_RC=". $HOME/.dotfiles/.dotfiles.rc"
BASHRC_PATH="$HOME/.bashrc"
ZSHRC_PATH="$HOME/.zshrc"

CURR_OS=$(uname -s)

if [ "$(id -u)" -ne 0 ]; then
    echo "Please enter your password to pre-authorize sudo:"
    sudo -v
fi

case "$CURR_OS" in
    Darwin*)
        if test ! "$(which brew)"; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

            BASE_HOMEBREW_FOLDER=/usr/local
            if [ "$(arch)" = "arm64" ]; then
                BASE_HOMEBREW_FOLDER=/opt/homebrew
            fi
            eval "$(${BASE_HOMEBREW_FOLDER}/bin/brew shellenv)"
        fi
        ;;
esac

echo "Install Depedencies..."
curl -fsSL https://code.wedotstud.io/patrick/dotfiles/raw/branch/main/scripts/deps.sh | sh


git clone "git@code.wedotstud.io:patrick/dotfiles.git" "$HOME/.dotfiles" || {
    git clone "https://code.wedotstud.io/patrick/dotfiles.git" "$HOME/.dotfiles"
}

insert_source() {
    rc_file=$1
    if ! grep -q "$SOURCE_DOTFILES_RC" "$rc_file"; then
        echo "$SOURCE_DOTFILES_RC" >> "$rc_file"
    fi
}

insert_source "$BASHRC_PATH"
insert_source "$ZSHRC_PATH"

# install starship config
# if starship config already exists and not symlinked, back it up
if test -f "$HOME/.config/starship.toml" && ! test -L "$HOME/.config/starship.toml"; then
    echo "Backing up existing starship configuration..."
    mv "$HOME/.config/starship.toml" "$HOME/.config/starship.toml.bak"
fi
echo "Installing starship configuration..."
mkdir -p "$HOME/.config"
ln -s "$HOME/.dotfiles/starship.toml" "$HOME/.config/starship.toml"

if test -f "$HOME/.wezterm.lua"; then
    echo "::Backing up Wezterm configuration..."
    mv "$HOME/.wezterm.lua" "$HOME/.wezterm.lua.bak"
fi
echo "::Installing Wezterm Configuration..."
ln -s "$HOME/.dotfiles/.wezterm.lua" "$HOME/.wezterm.lua"


if test -d "$HOME/.config/nvim" && test ! -L "$HOME/.config/nvim"; then
    echo "::Backing up existing nvim configuration..."
    mv "$HOME/.config/nvim" "$HOME/.config/nvim.bak"
fi

echo "::Installing nvim configuration..."
ln -sfn "$HOME/.dotfiles/neovim" "$HOME/.config/nvim" && \
    nvim --headless "+Lazy! sync" +qa

sleep 10
echo "Done! Please restart your shell."
